name: Deploy master
env:
  EB_PACKAGE_S3_BUCKET_NAME: "flohiringflask"
  EB_APPLICATION_NAME: "flask-flohiring"
  EB_ENVIRONMENT_NAME: "Flaskflohiring-env"
  DEPLOY_PACKAGE_NAME: "flohiringflask-${{ github.sha }}.zip"
  AWS_REGION_NAME: "eu-west-1"

on:
  push:
    branches:
    - main

jobs:
  my_ci_pipeline:
    runs-on: ubuntu-latest
    steps:

    - name: Checkout source code
      uses: actions/checkout@v2

    - name: Generate deployment package
      run: zip -r ${{ env.DEPLOY_PACKAGE_NAME }} . -x '.git'
    
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION_NAME }}
    - name: Copy our deployment package to our S3 buckets
      run: aws s3 cp ${{ env.DEPLOY_PACKAGE_NAME }} s3://${{ env.EB_PACKAGE_S3_BUCKET_NAME }}/
    - name: Copy our deployment package to our S3 buckets
      run: echo "CI part of Pipeline is finished.  "
      
  my_cd_pipeline:
    runs-on: ubuntu-latest
    needs: [my_ci_pipeline]
    steps:
    
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION_NAME }}
    - name: Create new Elastic Beanstalk Application Version
      run: |
       aws elasticbeanstalk create-application-version \
       --application-name ${{env.EB_APPLICATION_NAME}} \
       --source-bundle S3Bucket="${{env.EB_APPLICATION_S3_BUCKET_NAME}}", S3Key="${{ env.DEPLOY_PACKAGE_NAME }}" \
       --version-label "Ver-${{github.sha}}" \
       --description "CommitSHA-${{github.sha}}"
    - name: Deploy our new Application Version
      run: aws elasticbeanstalk update-enviroment --environment-name ${{ env.EB_ENVIRONMENT_NAME }} --version-label "Ver-${{github.sha}}"
    - name: PRINT NICE MESSAGE
      run: echo "APPLICATION IS DEPLOYED"
